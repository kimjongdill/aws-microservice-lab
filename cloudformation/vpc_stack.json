{

	"AWSTemplateFormatVersion" : "2010-09-09",
	
	"Description" : "Create a VPC with Public and Private subnet, complete with ACL, Route Table, IG, and NAT.",
	
	"Parameters" : {
		"AvailabilityZone1" : {
			"Description" : "First Availability Zone",
			"Type" : "AWS::EC2::AvailabilityZone::Name",
			"ConstraintDescription" : "Must be a valid availability zone"
		},
		"AvailabilityZone2" : {
			"Description" : "Second Availability Zone",
			"Type" : "AWS::EC2::AvailabilityZone::Name",
			"ConstraintDescription" : "Must be a valid availability zone"
		}
	},


    "Resources" : {

	"VPC" : {
	    "Type" : "AWS::EC2::VPC",
	    "Properties" : {
		"CidrBlock" : "10.0.0.0/16",
		"EnableDnsHostnames" : "true",
		"EnableDnsSupport" : "true",
		"Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
			   {"Key" : "MicroserviceExperiment", "Value" : ""}]
	    }
	},
	
	"PublicSubnet1" : {
	    "Type" : "AWS::EC2::Subnet",
	    "Properties" : {
		"VpcId" : { "Ref" : "VPC" },
		"CidrBlock" : "10.0.1.0/24",
		"AvailabilityZone" : {"Ref" : "AvailabilityZone1"},
		"Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
					{"Key" : "kubernetes.io/cluster/web-app", "Value" : "shared"},
					{"Key" : "kubernetes.io/role/elb", "Value" : "1"} ]
	    }
	},
	
	"PrivateSubnet1" : {
	    "Type" : "AWS::EC2::Subnet",
	    "Properties" : {
		"VpcId" : { "Ref" : "VPC" },
		"AvailabilityZone" : {"Ref" : "AvailabilityZone1"},
		"CidrBlock" : "10.0.2.0/24",
		"Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
			{"Key" : "kubernetes.io/cluster/web-app", "Value" : "shared"} ]
	    }
	},
	
	"PublicSubnet2" : {
	    "Type" : "AWS::EC2::Subnet",
	    "Properties" : {
		"VpcId" : { "Ref" : "VPC" },
		"CidrBlock" : "10.0.3.0/24",
		"AvailabilityZone" : {"Ref" : "AvailabilityZone2"},
		"Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
			{"Key" : "kubernetes.io/cluster/web-app", "Value" : "shared"},
			{"Key" : "kubernetes.io/role/elb", "Value" : "1"} ]
	    }
	},
	
	"PrivateSubnet2" : {
	    "Type" : "AWS::EC2::Subnet",
	    "Properties" : {
		"VpcId" : { "Ref" : "VPC" },
		"AvailabilityZone" : {"Ref" : "AvailabilityZone2"},
		"CidrBlock" : "10.0.4.0/24",
		"Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
			{"Key" : "kubernetes.io/cluster/web-app", "Value" : "shared"} ]
	    }
	},

	"InternetGateway" : {
	    "Type" : "AWS::EC2::InternetGateway",
	    "Properties" : {
		"Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
	    }
	},

	"AttachGateway" : {
	    "Type" : "AWS::EC2::VPCGatewayAttachment",
	    "Properties" : {
		"VpcId" : {"Ref" : "VPC"},
		"InternetGatewayId" : { "Ref" : "InternetGateway" }
	    }
	},

	"NatGateway1" : {
		"Type" : "AWS::EC2::NatGateway",
		"Properties" : {
			"AllocationId" : { "Fn::GetAtt" : ["EIP1", "AllocationId"]},
			"SubnetId" : { "Ref" : "PublicSubnet1" }
		}
	},

	"NatGateway2" : {
		"Type" : "AWS::EC2::NatGateway",
		"Properties" : {
			"AllocationId" : { "Fn::GetAtt" : ["EIP2", "AllocationId"]},
			"SubnetId" : { "Ref" : "PublicSubnet2" }
		}
	},

	"EIP1" : {
		"DependsOn" : "AttachGateway",
		"Type" : "AWS::EC2::EIP",
		"Properties" : {
		   "Domain" : "VPC"
		}
	 },

	 "EIP2" : {
		"DependsOn" : "AttachGateway",
		"Type" : "AWS::EC2::EIP",
		"Properties" : {
		   "Domain" : "VPC"
		}
	 },

	"RouteTablePublic1" : {
	    "Type" : "AWS::EC2::RouteTable",
	    "Properties" : {
			"VpcId" : {"Ref" : "VPC"},
			"Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
	    }
	},

	"PublicSNRouteTableAssoc" : {
		"Type" : "AWS::EC2::SubnetRouteTableAssociation",
		"DependsOn" : "RouteTablePublic1",
		"Properties" : {
			"SubnetId" : { "Ref" : "PublicSubnet1"},
			"RouteTableId" : { "Ref" : "RouteTablePublic1" }
		}
	},

	"PublicSNRouteTableAssoc2" : {
		"Type" : "AWS::EC2::SubnetRouteTableAssociation",
		"DependsOn" : "RouteTablePublic1",
		"Properties" : {
			"SubnetId" : { "Ref" : "PublicSubnet2"},
			"RouteTableId" : { "Ref" : "RouteTablePublic1" }
		}
	},

    "RoutePublicToInternet" : {
		"Type" : "AWS::EC2::Route",
		"DependsOn" : "AttachGateway",
		"Properties" : {
		  "RouteTableId" : { "Ref" : "RouteTablePublic1" },
		  "DestinationCidrBlock" : "0.0.0.0/0",
		  "GatewayId" : { "Ref" : "InternetGateway" }
		}
	  },		

	"RouteTablePublic2" : {
		"Type" : "AWS::EC2::RouteTable",
	    "Properties" : {
			"VpcId" : {"Ref" : "VPC"},
			"Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
			}
	},

	"RoutePublicToInternet2" : {
		"Type" : "AWS::EC2::Route",
		"DependsOn" : "AttachGateway",
		"Properties" : {
		  "RouteTableId" : { "Ref" : "RouteTablePublic2" },
		  "DestinationCidrBlock" : "0.0.0.0/0",
		  "GatewayId" : { "Ref" : "InternetGateway" }
		}
	  },	

	"RouteTablePrivate" : {
	    "Type" : "AWS::EC2::RouteTable",
	    "Properties" : {
		"VpcId" : {"Ref" : "VPC"},
		"Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
	    }
	},

	"RouteTablePrivate2" : {
		"Type" : "AWS::EC2::RouteTable",
	    "Properties" : {
		"VpcId" : {"Ref" : "VPC"},
		"Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
	    }
	},

	"PrivateSN1RouteTableAssoc" : {
		"Type" : "AWS::EC2::SubnetRouteTableAssociation",
		"DependsOn" : "RouteTablePrivate",
		"Properties" : {
			"SubnetId" : { "Ref" : "PrivateSubnet1"},
			"RouteTableId" : { "Ref" : "RouteTablePrivate" }
		}
	},

	"PrivateSN2RouteTableAssoc" : {
		"Type" : "AWS::EC2::SubnetRouteTableAssociation",
		"DependsOn" : "RouteTablePrivate",
		"Properties" : {
			"SubnetId" : { "Ref" : "PrivateSubnet2"},
			"RouteTableId" : { "Ref" : "RouteTablePrivate2" }
		}
	},
	
	"RouteExternalTrafficPrivateSN1" : {
		"Type" : "AWS::EC2::Route",
		"DependsOn" : "EIP1",
		"Properties" : {
			"RouteTableId" : { "Ref" : "RouteTablePrivate" },
			"DestinationCidrBlock" : "0.0.0.0/0",
			"NatGatewayId" : { "Ref" : "NatGateway1" }
		}
	},

	"RouteExternalTrafficPrivateSN2" : {
		"Type" : "AWS::EC2::Route",
		"DependsOn" : "EIP2",
		"Properties" : {
			"RouteTableId" : { "Ref" : "RouteTablePrivate2" },
			"DestinationCidrBlock" : "0.0.0.0/0",
			"NatGatewayId" : { "Ref" : "NatGateway2" }
		}
	},

	"NetworkAcl" : {
		"Type" : "AWS::EC2::NetworkAcl",
		"Properties" : {
		  "VpcId" : {"Ref" : "VPC"},
		  "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
		}
	  },
  
	  "AllTrafficACLIngress" : {
		"Type" : "AWS::EC2::NetworkAclEntry",
		"Properties" : {
		  "NetworkAclId" : {"Ref" : "NetworkAcl"},
		  "RuleNumber" : "100",
		  "Protocol" : "-1",
		  "RuleAction" : "allow",
		  "Egress" : "false",
		  "CidrBlock" : "0.0.0.0/0",
		  "PortRange" : {"From" : "0", "To" : "65535"}
		}
	  },

	  "AllTrafficACLEgress" : {
		"Type" : "AWS::EC2::NetworkAclEntry",
		"Properties" : {
		  "NetworkAclId" : {"Ref" : "NetworkAcl"},
		  "RuleNumber" : "100",
		  "Protocol" : "-1",
		  "RuleAction" : "allow",
		  "Egress" : "true",
		  "CidrBlock" : "0.0.0.0/0",
		  "PortRange" : {"From" : "0", "To" : "65535"}
		}
	  },
	  "PublicSubnetNetworkAclAssociation2" : {
		"Type" : "AWS::EC2::SubnetNetworkAclAssociation",
		"Properties" : {
		  "SubnetId" : { "Ref" : "PublicSubnet2" },
		  "NetworkAclId" : { "Ref" : "NetworkAcl" }
		}
	  },

	  "PublicSubnetNetworkAclAssociation" : {
		"Type" : "AWS::EC2::SubnetNetworkAclAssociation",
		"Properties" : {
		  "SubnetId" : { "Ref" : "PublicSubnet1" },
		  "NetworkAclId" : { "Ref" : "NetworkAcl" }
		}
	  },	

	  "PrivateSubnetNetworkAclAssociation" : {
		"Type" : "AWS::EC2::SubnetNetworkAclAssociation",
		"Properties" : {
		  "SubnetId" : { "Ref" : "PrivateSubnet1" },
		  "NetworkAclId" : { "Ref" : "NetworkAcl" }
		}
	  },

	  "PrivateSubnetNetworkAclAssociation2" : {
		"Type" : "AWS::EC2::SubnetNetworkAclAssociation",
		"Properties" : {
		  "SubnetId" : { "Ref" : "PrivateSubnet2" },
		  "NetworkAclId" : { "Ref" : "NetworkAcl" }
		}
	  },

	  "WebFacingSecurityGroup" : {
		"Type" : "AWS::EC2::SecurityGroup",
		"Properties" : {
		   "GroupDescription" : "Allow http to client host",
		   "VpcId" : {"Ref" : "VPC"},
		   "SecurityGroupIngress" : [{
			  "IpProtocol" : "tcp",
			  "FromPort" : 80,
			  "ToPort" : 80,
			  "CidrIp" : "0.0.0.0/0"
		   },
		   {
			"IpProtocol" : "tcp",
			"FromPort" : 8080,
			"ToPort" : 8080,
			"CidrIp" : "0.0.0.0/0"
			},  
		   {
			"IpProtocol" : "tcp",
			"FromPort" : 22,
			"ToPort" : 22,
			"CidrIp" : "0.0.0.0/0"
		 	}],
		   "SecurityGroupEgress" : [{
			"IpProtocol" : "-1",
			"FromPort" : 0,
			"ToPort" : 65535,
			"CidrIp" : "0.0.0.0/0"
			}]
		}
	 },
	  
	 "PrivateSecurityGroup" : {
		"Type" : "AWS::EC2::SecurityGroup",
		"Properties" : {
		   "GroupDescription" : "Allow http to client host",
		   "VpcId" : {"Ref" : "VPC"},
		   "SecurityGroupIngress" : [{
			  "IpProtocol" : "-1",
			  "FromPort": 0,
			  "ToPort": 65535,
			  "CidrIp" : "10.0.0.0/16"
		   }
			],
		"SecurityGroupEgress" : [{
			"IpProtocol" : "-1",
			"FromPort": 0,
			"ToPort": 65535,
			"CidrIp" : "0.0.0.0/0"
		 }]
		}
	 },

	 "LoadBalancer" : {
		"Type" : "AWS::ElasticLoadBalancingV2::LoadBalancer",
		"Properties" : {
			"IpAddressType" : "ipv4",
			"Name" : "container-lab-alb",
			"Scheme" : "internet-facing",
			"SecurityGroups" : [{"Ref" : "WebFacingSecurityGroup"}],
			"SubnetMappings" : [ {"SubnetId" : {"Ref" : "PublicSubnet1"}}, 
				{"SubnetId" : {"Ref" : "PublicSubnet2"}} ],
			"Type" : "application"
		  }
	  }
	},
	"Outputs" : {
		"URL" : {
		  "Value" : "Success",
		  "Description" : "Newly created application URL"
		}
	}
}
